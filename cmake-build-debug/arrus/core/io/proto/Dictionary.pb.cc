// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/Dictionary.proto

#include "io/proto/Dictionary.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fProbeAdapterModel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ProbeAdapterModel_io_2fproto_2fdevices_2fus4r_2fProbeAdapterModel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fprobe_2fProbeModel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProbeModel_io_2fproto_2fdevices_2fprobe_2fProbeModel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ProbeToAdapterConnection_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto;
namespace arrus {
namespace proto {
class DictionaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Dictionary> _instance;
} _Dictionary_default_instance_;
}  // namespace proto
}  // namespace arrus
static void InitDefaultsscc_info_Dictionary_io_2fproto_2fDictionary_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::arrus::proto::_Dictionary_default_instance_;
    new (ptr) ::arrus::proto::Dictionary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::arrus::proto::Dictionary::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Dictionary_io_2fproto_2fDictionary_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Dictionary_io_2fproto_2fDictionary_2eproto}, {
      &scc_info_ProbeModel_io_2fproto_2fdevices_2fprobe_2fProbeModel_2eproto.base,
      &scc_info_ProbeAdapterModel_io_2fproto_2fdevices_2fus4r_2fProbeAdapterModel_2eproto.base,
      &scc_info_ProbeToAdapterConnection_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_io_2fproto_2fDictionary_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_io_2fproto_2fDictionary_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_io_2fproto_2fDictionary_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_io_2fproto_2fDictionary_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::Dictionary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::Dictionary, probe_models_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::Dictionary, probe_adapter_models_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::Dictionary, probe_to_adapter_connections_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::arrus::proto::Dictionary)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::arrus::proto::_Dictionary_default_instance_),
};

const char descriptor_table_protodef_io_2fproto_2fDictionary_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031io/proto/Dictionary.proto\022\013arrus.proto"
  "\032\'io/proto/devices/probe/ProbeModel.prot"
  "o\032-io/proto/devices/us4r/ProbeAdapterMod"
  "el.proto\0324io/proto/devices/us4r/ProbeToA"
  "dapterConnection.proto\"\306\001\n\nDictionary\022-\n"
  "\014probe_models\030\001 \003(\0132\027.arrus.proto.ProbeM"
  "odel\022<\n\024probe_adapter_models\030\002 \003(\0132\036.arr"
  "us.proto.ProbeAdapterModel\022K\n\034probe_to_a"
  "dapter_connections\030\003 \003(\0132%.arrus.proto.P"
  "robeToAdapterConnectionb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_io_2fproto_2fDictionary_2eproto_deps[3] = {
  &::descriptor_table_io_2fproto_2fdevices_2fprobe_2fProbeModel_2eproto,
  &::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeAdapterModel_2eproto,
  &::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_io_2fproto_2fDictionary_2eproto_sccs[1] = {
  &scc_info_Dictionary_io_2fproto_2fDictionary_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_io_2fproto_2fDictionary_2eproto_once;
static bool descriptor_table_io_2fproto_2fDictionary_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fDictionary_2eproto = {
  &descriptor_table_io_2fproto_2fDictionary_2eproto_initialized, descriptor_table_protodef_io_2fproto_2fDictionary_2eproto, "io/proto/Dictionary.proto", 391,
  &descriptor_table_io_2fproto_2fDictionary_2eproto_once, descriptor_table_io_2fproto_2fDictionary_2eproto_sccs, descriptor_table_io_2fproto_2fDictionary_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_io_2fproto_2fDictionary_2eproto::offsets,
  file_level_metadata_io_2fproto_2fDictionary_2eproto, 1, file_level_enum_descriptors_io_2fproto_2fDictionary_2eproto, file_level_service_descriptors_io_2fproto_2fDictionary_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_io_2fproto_2fDictionary_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_io_2fproto_2fDictionary_2eproto), true);
namespace arrus {
namespace proto {

// ===================================================================

void Dictionary::InitAsDefaultInstance() {
}
class Dictionary::_Internal {
 public:
};

void Dictionary::clear_probe_models() {
  probe_models_.Clear();
}
void Dictionary::clear_probe_adapter_models() {
  probe_adapter_models_.Clear();
}
void Dictionary::clear_probe_to_adapter_connections() {
  probe_to_adapter_connections_.Clear();
}
Dictionary::Dictionary()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arrus.proto.Dictionary)
}
Dictionary::Dictionary(const Dictionary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      probe_models_(from.probe_models_),
      probe_adapter_models_(from.probe_adapter_models_),
      probe_to_adapter_connections_(from.probe_to_adapter_connections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:arrus.proto.Dictionary)
}

void Dictionary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Dictionary_io_2fproto_2fDictionary_2eproto.base);
}

Dictionary::~Dictionary() {
  // @@protoc_insertion_point(destructor:arrus.proto.Dictionary)
  SharedDtor();
}

void Dictionary::SharedDtor() {
}

void Dictionary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Dictionary& Dictionary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Dictionary_io_2fproto_2fDictionary_2eproto.base);
  return *internal_default_instance();
}


void Dictionary::Clear() {
// @@protoc_insertion_point(message_clear_start:arrus.proto.Dictionary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  probe_models_.Clear();
  probe_adapter_models_.Clear();
  probe_to_adapter_connections_.Clear();
  _internal_metadata_.Clear();
}

const char* Dictionary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .arrus.proto.ProbeModel probe_models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_probe_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .arrus.proto.ProbeAdapterModel probe_adapter_models = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_probe_adapter_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .arrus.proto.ProbeToAdapterConnection probe_to_adapter_connections = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_probe_to_adapter_connections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Dictionary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:arrus.proto.Dictionary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .arrus.proto.ProbeModel probe_models = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_probe_models_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_probe_models(i), target, stream);
  }

  // repeated .arrus.proto.ProbeAdapterModel probe_adapter_models = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_probe_adapter_models_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_probe_adapter_models(i), target, stream);
  }

  // repeated .arrus.proto.ProbeToAdapterConnection probe_to_adapter_connections = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_probe_to_adapter_connections_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_probe_to_adapter_connections(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arrus.proto.Dictionary)
  return target;
}

size_t Dictionary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arrus.proto.Dictionary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .arrus.proto.ProbeModel probe_models = 1;
  total_size += 1UL * this->_internal_probe_models_size();
  for (const auto& msg : this->probe_models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .arrus.proto.ProbeAdapterModel probe_adapter_models = 2;
  total_size += 1UL * this->_internal_probe_adapter_models_size();
  for (const auto& msg : this->probe_adapter_models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .arrus.proto.ProbeToAdapterConnection probe_to_adapter_connections = 3;
  total_size += 1UL * this->_internal_probe_to_adapter_connections_size();
  for (const auto& msg : this->probe_to_adapter_connections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dictionary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arrus.proto.Dictionary)
  GOOGLE_DCHECK_NE(&from, this);
  const Dictionary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Dictionary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arrus.proto.Dictionary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arrus.proto.Dictionary)
    MergeFrom(*source);
  }
}

void Dictionary::MergeFrom(const Dictionary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arrus.proto.Dictionary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  probe_models_.MergeFrom(from.probe_models_);
  probe_adapter_models_.MergeFrom(from.probe_adapter_models_);
  probe_to_adapter_connections_.MergeFrom(from.probe_to_adapter_connections_);
}

void Dictionary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arrus.proto.Dictionary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dictionary::CopyFrom(const Dictionary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arrus.proto.Dictionary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dictionary::IsInitialized() const {
  return true;
}

void Dictionary::InternalSwap(Dictionary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  probe_models_.InternalSwap(&other->probe_models_);
  probe_adapter_models_.InternalSwap(&other->probe_adapter_models_);
  probe_to_adapter_connections_.InternalSwap(&other->probe_to_adapter_connections_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Dictionary::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::arrus::proto::Dictionary* Arena::CreateMaybeMessage< ::arrus::proto::Dictionary >(Arena* arena) {
  return Arena::CreateInternal< ::arrus::proto::Dictionary >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
