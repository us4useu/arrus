// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/session/SessionSettings.proto

#include "io/proto/session/SessionSettings.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2ffile_2fFileSettings_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_FileSettings_io_2fproto_2fdevices_2ffile_2fFileSettings_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fUs4RSettings_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<11> scc_info_Us4RSettings_io_2fproto_2fdevices_2fus4r_2fUs4RSettings_2eproto;
namespace arrus {
namespace proto {
class SessionSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SessionSettings> _instance;
  const ::arrus::proto::Us4RSettings* us4r_;
  const ::arrus::proto::FileSettings* file_;
} _SessionSettings_default_instance_;
}  // namespace proto
}  // namespace arrus
static void InitDefaultsscc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::arrus::proto::_SessionSettings_default_instance_;
    new (ptr) ::arrus::proto::SessionSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::arrus::proto::SessionSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto}, {
      &scc_info_Us4RSettings_io_2fproto_2fdevices_2fus4r_2fUs4RSettings_2eproto.base,
      &scc_info_FileSettings_io_2fproto_2fdevices_2ffile_2fFileSettings_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_io_2fproto_2fsession_2fSessionSettings_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_io_2fproto_2fsession_2fSessionSettings_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_io_2fproto_2fsession_2fSessionSettings_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_io_2fproto_2fsession_2fSessionSettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::SessionSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::SessionSettings, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::arrus::proto::SessionSettingsDefaultTypeInternal, us4r_),
  offsetof(::arrus::proto::SessionSettingsDefaultTypeInternal, file_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::SessionSettings, dictionary_file_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::SessionSettings, one_of_device_representation_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::arrus::proto::SessionSettings)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::arrus::proto::_SessionSettings_default_instance_),
};

const char descriptor_table_protodef_io_2fproto_2fsession_2fSessionSettings_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&io/proto/session/SessionSettings.proto"
  "\022\013arrus.proto\032(io/proto/devices/us4r/Us4"
  "RSettings.proto\032(io/proto/devices/file/F"
  "ileSettings.proto\"\240\001\n\017SessionSettings\022)\n"
  "\004us4r\030\001 \001(\0132\031.arrus.proto.Us4RSettingsH\000"
  "\022)\n\004file\030\002 \001(\0132\031.arrus.proto.FileSetting"
  "sH\000\022\027\n\017dictionary_file\030\003 \001(\tB\036\n\034one_of_d"
  "evice_representationb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_deps[2] = {
  &::descriptor_table_io_2fproto_2fdevices_2ffile_2fFileSettings_2eproto,
  &::descriptor_table_io_2fproto_2fdevices_2fus4r_2fUs4RSettings_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_sccs[1] = {
  &scc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_once;
static bool descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto = {
  &descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_initialized, descriptor_table_protodef_io_2fproto_2fsession_2fSessionSettings_2eproto, "io/proto/session/SessionSettings.proto", 308,
  &descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_once, descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_sccs, descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_io_2fproto_2fsession_2fSessionSettings_2eproto::offsets,
  file_level_metadata_io_2fproto_2fsession_2fSessionSettings_2eproto, 1, file_level_enum_descriptors_io_2fproto_2fsession_2fSessionSettings_2eproto, file_level_service_descriptors_io_2fproto_2fsession_2fSessionSettings_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_io_2fproto_2fsession_2fSessionSettings_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_io_2fproto_2fsession_2fSessionSettings_2eproto), true);
namespace arrus {
namespace proto {

// ===================================================================

void SessionSettings::InitAsDefaultInstance() {
  ::arrus::proto::_SessionSettings_default_instance_.us4r_ = const_cast< ::arrus::proto::Us4RSettings*>(
      ::arrus::proto::Us4RSettings::internal_default_instance());
  ::arrus::proto::_SessionSettings_default_instance_.file_ = const_cast< ::arrus::proto::FileSettings*>(
      ::arrus::proto::FileSettings::internal_default_instance());
}
class SessionSettings::_Internal {
 public:
  static const ::arrus::proto::Us4RSettings& us4r(const SessionSettings* msg);
  static const ::arrus::proto::FileSettings& file(const SessionSettings* msg);
};

const ::arrus::proto::Us4RSettings&
SessionSettings::_Internal::us4r(const SessionSettings* msg) {
  return *msg->one_of_device_representation_.us4r_;
}
const ::arrus::proto::FileSettings&
SessionSettings::_Internal::file(const SessionSettings* msg) {
  return *msg->one_of_device_representation_.file_;
}
void SessionSettings::set_allocated_us4r(::arrus::proto::Us4RSettings* us4r) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_one_of_device_representation();
  if (us4r) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      us4r = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, us4r, submessage_arena);
    }
    set_has_us4r();
    one_of_device_representation_.us4r_ = us4r;
  }
  // @@protoc_insertion_point(field_set_allocated:arrus.proto.SessionSettings.us4r)
}
void SessionSettings::clear_us4r() {
  if (_internal_has_us4r()) {
    delete one_of_device_representation_.us4r_;
    clear_has_one_of_device_representation();
  }
}
void SessionSettings::set_allocated_file(::arrus::proto::FileSettings* file) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_one_of_device_representation();
  if (file) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      file = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    set_has_file();
    one_of_device_representation_.file_ = file;
  }
  // @@protoc_insertion_point(field_set_allocated:arrus.proto.SessionSettings.file)
}
void SessionSettings::clear_file() {
  if (_internal_has_file()) {
    delete one_of_device_representation_.file_;
    clear_has_one_of_device_representation();
  }
}
SessionSettings::SessionSettings()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arrus.proto.SessionSettings)
}
SessionSettings::SessionSettings(const SessionSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dictionary_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dictionary_file().empty()) {
    dictionary_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dictionary_file_);
  }
  clear_has_one_of_device_representation();
  switch (from.one_of_device_representation_case()) {
    case kUs4R: {
      _internal_mutable_us4r()->::arrus::proto::Us4RSettings::MergeFrom(from._internal_us4r());
      break;
    }
    case kFile: {
      _internal_mutable_file()->::arrus::proto::FileSettings::MergeFrom(from._internal_file());
      break;
    }
    case ONE_OF_DEVICE_REPRESENTATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:arrus.proto.SessionSettings)
}

void SessionSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto.base);
  dictionary_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_one_of_device_representation();
}

SessionSettings::~SessionSettings() {
  // @@protoc_insertion_point(destructor:arrus.proto.SessionSettings)
  SharedDtor();
}

void SessionSettings::SharedDtor() {
  dictionary_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_one_of_device_representation()) {
    clear_one_of_device_representation();
  }
}

void SessionSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionSettings& SessionSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SessionSettings_io_2fproto_2fsession_2fSessionSettings_2eproto.base);
  return *internal_default_instance();
}


void SessionSettings::clear_one_of_device_representation() {
// @@protoc_insertion_point(one_of_clear_start:arrus.proto.SessionSettings)
  switch (one_of_device_representation_case()) {
    case kUs4R: {
      delete one_of_device_representation_.us4r_;
      break;
    }
    case kFile: {
      delete one_of_device_representation_.file_;
      break;
    }
    case ONE_OF_DEVICE_REPRESENTATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONE_OF_DEVICE_REPRESENTATION_NOT_SET;
}


void SessionSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:arrus.proto.SessionSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dictionary_file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_one_of_device_representation();
  _internal_metadata_.Clear();
}

const char* SessionSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .arrus.proto.Us4RSettings us4r = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_us4r(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .arrus.proto.FileSettings file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_file(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dictionary_file = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dictionary_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "arrus.proto.SessionSettings.dictionary_file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SessionSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:arrus.proto.SessionSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .arrus.proto.Us4RSettings us4r = 1;
  if (_internal_has_us4r()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::us4r(this), target, stream);
  }

  // .arrus.proto.FileSettings file = 2;
  if (_internal_has_file()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::file(this), target, stream);
  }

  // string dictionary_file = 3;
  if (this->dictionary_file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dictionary_file().data(), static_cast<int>(this->_internal_dictionary_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "arrus.proto.SessionSettings.dictionary_file");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dictionary_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arrus.proto.SessionSettings)
  return target;
}

size_t SessionSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arrus.proto.SessionSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dictionary_file = 3;
  if (this->dictionary_file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dictionary_file());
  }

  switch (one_of_device_representation_case()) {
    // .arrus.proto.Us4RSettings us4r = 1;
    case kUs4R: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *one_of_device_representation_.us4r_);
      break;
    }
    // .arrus.proto.FileSettings file = 2;
    case kFile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *one_of_device_representation_.file_);
      break;
    }
    case ONE_OF_DEVICE_REPRESENTATION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arrus.proto.SessionSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SessionSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arrus.proto.SessionSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arrus.proto.SessionSettings)
    MergeFrom(*source);
  }
}

void SessionSettings::MergeFrom(const SessionSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arrus.proto.SessionSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dictionary_file().size() > 0) {

    dictionary_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dictionary_file_);
  }
  switch (from.one_of_device_representation_case()) {
    case kUs4R: {
      _internal_mutable_us4r()->::arrus::proto::Us4RSettings::MergeFrom(from._internal_us4r());
      break;
    }
    case kFile: {
      _internal_mutable_file()->::arrus::proto::FileSettings::MergeFrom(from._internal_file());
      break;
    }
    case ONE_OF_DEVICE_REPRESENTATION_NOT_SET: {
      break;
    }
  }
}

void SessionSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arrus.proto.SessionSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionSettings::CopyFrom(const SessionSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arrus.proto.SessionSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionSettings::IsInitialized() const {
  return true;
}

void SessionSettings::InternalSwap(SessionSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dictionary_file_.Swap(&other->dictionary_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(one_of_device_representation_, other->one_of_device_representation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::arrus::proto::SessionSettings* Arena::CreateMaybeMessage< ::arrus::proto::SessionSettings >(Arena* arena) {
  return Arena::CreateInternal< ::arrus::proto::SessionSettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
