// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/devices/us4r/ProbeToAdapterConnection.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "io/proto/devices/probe/ProbeModel.pb.h"
#include "io/proto/devices/us4r/ProbeAdapterModel.pb.h"
#include "io/proto/common/IntervalInteger.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto;
namespace arrus {
namespace proto {
class ProbeToAdapterConnection;
class ProbeToAdapterConnectionDefaultTypeInternal;
extern ProbeToAdapterConnectionDefaultTypeInternal _ProbeToAdapterConnection_default_instance_;
class ProbeToAdapterConnection_BitstreamId;
class ProbeToAdapterConnection_BitstreamIdDefaultTypeInternal;
extern ProbeToAdapterConnection_BitstreamIdDefaultTypeInternal _ProbeToAdapterConnection_BitstreamId_default_instance_;
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> ::arrus::proto::ProbeToAdapterConnection* Arena::CreateMaybeMessage<::arrus::proto::ProbeToAdapterConnection>(Arena*);
template<> ::arrus::proto::ProbeToAdapterConnection_BitstreamId* Arena::CreateMaybeMessage<::arrus::proto::ProbeToAdapterConnection_BitstreamId>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace arrus {
namespace proto {

// ===================================================================

class ProbeToAdapterConnection_BitstreamId :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.ProbeToAdapterConnection.BitstreamId) */ {
 public:
  ProbeToAdapterConnection_BitstreamId();
  virtual ~ProbeToAdapterConnection_BitstreamId();

  ProbeToAdapterConnection_BitstreamId(const ProbeToAdapterConnection_BitstreamId& from);
  ProbeToAdapterConnection_BitstreamId(ProbeToAdapterConnection_BitstreamId&& from) noexcept
    : ProbeToAdapterConnection_BitstreamId() {
    *this = ::std::move(from);
  }

  inline ProbeToAdapterConnection_BitstreamId& operator=(const ProbeToAdapterConnection_BitstreamId& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProbeToAdapterConnection_BitstreamId& operator=(ProbeToAdapterConnection_BitstreamId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProbeToAdapterConnection_BitstreamId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProbeToAdapterConnection_BitstreamId* internal_default_instance() {
    return reinterpret_cast<const ProbeToAdapterConnection_BitstreamId*>(
               &_ProbeToAdapterConnection_BitstreamId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProbeToAdapterConnection_BitstreamId& a, ProbeToAdapterConnection_BitstreamId& b) {
    a.Swap(&b);
  }
  inline void Swap(ProbeToAdapterConnection_BitstreamId* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProbeToAdapterConnection_BitstreamId* New() const final {
    return CreateMaybeMessage<ProbeToAdapterConnection_BitstreamId>(nullptr);
  }

  ProbeToAdapterConnection_BitstreamId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProbeToAdapterConnection_BitstreamId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProbeToAdapterConnection_BitstreamId& from);
  void MergeFrom(const ProbeToAdapterConnection_BitstreamId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProbeToAdapterConnection_BitstreamId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.ProbeToAdapterConnection.BitstreamId";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto);
    return ::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrdinalFieldNumber = 1,
  };
  // uint32 ordinal = 1;
  void clear_ordinal();
  ::PROTOBUF_NAMESPACE_ID::uint32 ordinal() const;
  void set_ordinal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ordinal() const;
  void _internal_set_ordinal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:arrus.proto.ProbeToAdapterConnection.BitstreamId)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ordinal_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto;
};
// -------------------------------------------------------------------

class ProbeToAdapterConnection :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.ProbeToAdapterConnection) */ {
 public:
  ProbeToAdapterConnection();
  virtual ~ProbeToAdapterConnection();

  ProbeToAdapterConnection(const ProbeToAdapterConnection& from);
  ProbeToAdapterConnection(ProbeToAdapterConnection&& from) noexcept
    : ProbeToAdapterConnection() {
    *this = ::std::move(from);
  }

  inline ProbeToAdapterConnection& operator=(const ProbeToAdapterConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProbeToAdapterConnection& operator=(ProbeToAdapterConnection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProbeToAdapterConnection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProbeToAdapterConnection* internal_default_instance() {
    return reinterpret_cast<const ProbeToAdapterConnection*>(
               &_ProbeToAdapterConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProbeToAdapterConnection& a, ProbeToAdapterConnection& b) {
    a.Swap(&b);
  }
  inline void Swap(ProbeToAdapterConnection* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProbeToAdapterConnection* New() const final {
    return CreateMaybeMessage<ProbeToAdapterConnection>(nullptr);
  }

  ProbeToAdapterConnection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProbeToAdapterConnection>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProbeToAdapterConnection& from);
  void MergeFrom(const ProbeToAdapterConnection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProbeToAdapterConnection* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.ProbeToAdapterConnection";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto);
    return ::descriptor_table_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProbeToAdapterConnection_BitstreamId BitstreamId;

  // accessors -------------------------------------------------------

  enum : int {
    kProbeAdapterModelIdFieldNumber = 2,
    kChannelMappingFieldNumber = 3,
    kChannelMappingRangesFieldNumber = 4,
    kProbeModelIdFieldNumber = 1,
    kBitstreamIdFieldNumber = 5,
  };
  // repeated .arrus.proto.ProbeAdapterModel.Id probe_adapter_model_id = 2;
  int probe_adapter_model_id_size() const;
  private:
  int _internal_probe_adapter_model_id_size() const;
  public:
  void clear_probe_adapter_model_id();
  ::arrus::proto::ProbeAdapterModel_Id* mutable_probe_adapter_model_id(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel_Id >*
      mutable_probe_adapter_model_id();
  private:
  const ::arrus::proto::ProbeAdapterModel_Id& _internal_probe_adapter_model_id(int index) const;
  ::arrus::proto::ProbeAdapterModel_Id* _internal_add_probe_adapter_model_id();
  public:
  const ::arrus::proto::ProbeAdapterModel_Id& probe_adapter_model_id(int index) const;
  ::arrus::proto::ProbeAdapterModel_Id* add_probe_adapter_model_id();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel_Id >&
      probe_adapter_model_id() const;

  // repeated uint32 channel_mapping = 3;
  int channel_mapping_size() const;
  private:
  int _internal_channel_mapping_size() const;
  public:
  void clear_channel_mapping();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_mapping(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_channel_mapping() const;
  void _internal_add_channel_mapping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_channel_mapping();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_mapping(int index) const;
  void set_channel_mapping(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_channel_mapping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      channel_mapping() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_channel_mapping();

  // repeated .arrus.proto.IntervalInteger channel_mapping_ranges = 4;
  int channel_mapping_ranges_size() const;
  private:
  int _internal_channel_mapping_ranges_size() const;
  public:
  void clear_channel_mapping_ranges();
  ::arrus::proto::IntervalInteger* mutable_channel_mapping_ranges(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IntervalInteger >*
      mutable_channel_mapping_ranges();
  private:
  const ::arrus::proto::IntervalInteger& _internal_channel_mapping_ranges(int index) const;
  ::arrus::proto::IntervalInteger* _internal_add_channel_mapping_ranges();
  public:
  const ::arrus::proto::IntervalInteger& channel_mapping_ranges(int index) const;
  ::arrus::proto::IntervalInteger* add_channel_mapping_ranges();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IntervalInteger >&
      channel_mapping_ranges() const;

  // .arrus.proto.ProbeModel.Id probe_model_id = 1;
  bool has_probe_model_id() const;
  private:
  bool _internal_has_probe_model_id() const;
  public:
  void clear_probe_model_id();
  const ::arrus::proto::ProbeModel_Id& probe_model_id() const;
  ::arrus::proto::ProbeModel_Id* release_probe_model_id();
  ::arrus::proto::ProbeModel_Id* mutable_probe_model_id();
  void set_allocated_probe_model_id(::arrus::proto::ProbeModel_Id* probe_model_id);
  private:
  const ::arrus::proto::ProbeModel_Id& _internal_probe_model_id() const;
  ::arrus::proto::ProbeModel_Id* _internal_mutable_probe_model_id();
  public:

  // .arrus.proto.ProbeToAdapterConnection.BitstreamId bitstream_id = 5;
  bool has_bitstream_id() const;
  private:
  bool _internal_has_bitstream_id() const;
  public:
  void clear_bitstream_id();
  const ::arrus::proto::ProbeToAdapterConnection_BitstreamId& bitstream_id() const;
  ::arrus::proto::ProbeToAdapterConnection_BitstreamId* release_bitstream_id();
  ::arrus::proto::ProbeToAdapterConnection_BitstreamId* mutable_bitstream_id();
  void set_allocated_bitstream_id(::arrus::proto::ProbeToAdapterConnection_BitstreamId* bitstream_id);
  private:
  const ::arrus::proto::ProbeToAdapterConnection_BitstreamId& _internal_bitstream_id() const;
  ::arrus::proto::ProbeToAdapterConnection_BitstreamId* _internal_mutable_bitstream_id();
  public:

  // @@protoc_insertion_point(class_scope:arrus.proto.ProbeToAdapterConnection)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel_Id > probe_adapter_model_id_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > channel_mapping_;
  mutable std::atomic<int> _channel_mapping_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IntervalInteger > channel_mapping_ranges_;
  ::arrus::proto::ProbeModel_Id* probe_model_id_;
  ::arrus::proto::ProbeToAdapterConnection_BitstreamId* bitstream_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProbeToAdapterConnection_BitstreamId

// uint32 ordinal = 1;
inline void ProbeToAdapterConnection_BitstreamId::clear_ordinal() {
  ordinal_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProbeToAdapterConnection_BitstreamId::_internal_ordinal() const {
  return ordinal_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProbeToAdapterConnection_BitstreamId::ordinal() const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.BitstreamId.ordinal)
  return _internal_ordinal();
}
inline void ProbeToAdapterConnection_BitstreamId::_internal_set_ordinal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ordinal_ = value;
}
inline void ProbeToAdapterConnection_BitstreamId::set_ordinal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ordinal(value);
  // @@protoc_insertion_point(field_set:arrus.proto.ProbeToAdapterConnection.BitstreamId.ordinal)
}

// -------------------------------------------------------------------

// ProbeToAdapterConnection

// .arrus.proto.ProbeModel.Id probe_model_id = 1;
inline bool ProbeToAdapterConnection::_internal_has_probe_model_id() const {
  return this != internal_default_instance() && probe_model_id_ != nullptr;
}
inline bool ProbeToAdapterConnection::has_probe_model_id() const {
  return _internal_has_probe_model_id();
}
inline const ::arrus::proto::ProbeModel_Id& ProbeToAdapterConnection::_internal_probe_model_id() const {
  const ::arrus::proto::ProbeModel_Id* p = probe_model_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::arrus::proto::ProbeModel_Id*>(
      &::arrus::proto::_ProbeModel_Id_default_instance_);
}
inline const ::arrus::proto::ProbeModel_Id& ProbeToAdapterConnection::probe_model_id() const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.probe_model_id)
  return _internal_probe_model_id();
}
inline ::arrus::proto::ProbeModel_Id* ProbeToAdapterConnection::release_probe_model_id() {
  // @@protoc_insertion_point(field_release:arrus.proto.ProbeToAdapterConnection.probe_model_id)
  
  ::arrus::proto::ProbeModel_Id* temp = probe_model_id_;
  probe_model_id_ = nullptr;
  return temp;
}
inline ::arrus::proto::ProbeModel_Id* ProbeToAdapterConnection::_internal_mutable_probe_model_id() {
  
  if (probe_model_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::arrus::proto::ProbeModel_Id>(GetArenaNoVirtual());
    probe_model_id_ = p;
  }
  return probe_model_id_;
}
inline ::arrus::proto::ProbeModel_Id* ProbeToAdapterConnection::mutable_probe_model_id() {
  // @@protoc_insertion_point(field_mutable:arrus.proto.ProbeToAdapterConnection.probe_model_id)
  return _internal_mutable_probe_model_id();
}
inline void ProbeToAdapterConnection::set_allocated_probe_model_id(::arrus::proto::ProbeModel_Id* probe_model_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(probe_model_id_);
  }
  if (probe_model_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      probe_model_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, probe_model_id, submessage_arena);
    }
    
  } else {
    
  }
  probe_model_id_ = probe_model_id;
  // @@protoc_insertion_point(field_set_allocated:arrus.proto.ProbeToAdapterConnection.probe_model_id)
}

// repeated .arrus.proto.ProbeAdapterModel.Id probe_adapter_model_id = 2;
inline int ProbeToAdapterConnection::_internal_probe_adapter_model_id_size() const {
  return probe_adapter_model_id_.size();
}
inline int ProbeToAdapterConnection::probe_adapter_model_id_size() const {
  return _internal_probe_adapter_model_id_size();
}
inline ::arrus::proto::ProbeAdapterModel_Id* ProbeToAdapterConnection::mutable_probe_adapter_model_id(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.ProbeToAdapterConnection.probe_adapter_model_id)
  return probe_adapter_model_id_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel_Id >*
ProbeToAdapterConnection::mutable_probe_adapter_model_id() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.ProbeToAdapterConnection.probe_adapter_model_id)
  return &probe_adapter_model_id_;
}
inline const ::arrus::proto::ProbeAdapterModel_Id& ProbeToAdapterConnection::_internal_probe_adapter_model_id(int index) const {
  return probe_adapter_model_id_.Get(index);
}
inline const ::arrus::proto::ProbeAdapterModel_Id& ProbeToAdapterConnection::probe_adapter_model_id(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.probe_adapter_model_id)
  return _internal_probe_adapter_model_id(index);
}
inline ::arrus::proto::ProbeAdapterModel_Id* ProbeToAdapterConnection::_internal_add_probe_adapter_model_id() {
  return probe_adapter_model_id_.Add();
}
inline ::arrus::proto::ProbeAdapterModel_Id* ProbeToAdapterConnection::add_probe_adapter_model_id() {
  // @@protoc_insertion_point(field_add:arrus.proto.ProbeToAdapterConnection.probe_adapter_model_id)
  return _internal_add_probe_adapter_model_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel_Id >&
ProbeToAdapterConnection::probe_adapter_model_id() const {
  // @@protoc_insertion_point(field_list:arrus.proto.ProbeToAdapterConnection.probe_adapter_model_id)
  return probe_adapter_model_id_;
}

// repeated uint32 channel_mapping = 3;
inline int ProbeToAdapterConnection::_internal_channel_mapping_size() const {
  return channel_mapping_.size();
}
inline int ProbeToAdapterConnection::channel_mapping_size() const {
  return _internal_channel_mapping_size();
}
inline void ProbeToAdapterConnection::clear_channel_mapping() {
  channel_mapping_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProbeToAdapterConnection::_internal_channel_mapping(int index) const {
  return channel_mapping_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProbeToAdapterConnection::channel_mapping(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.channel_mapping)
  return _internal_channel_mapping(index);
}
inline void ProbeToAdapterConnection::set_channel_mapping(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  channel_mapping_.Set(index, value);
  // @@protoc_insertion_point(field_set:arrus.proto.ProbeToAdapterConnection.channel_mapping)
}
inline void ProbeToAdapterConnection::_internal_add_channel_mapping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  channel_mapping_.Add(value);
}
inline void ProbeToAdapterConnection::add_channel_mapping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_channel_mapping(value);
  // @@protoc_insertion_point(field_add:arrus.proto.ProbeToAdapterConnection.channel_mapping)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ProbeToAdapterConnection::_internal_channel_mapping() const {
  return channel_mapping_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ProbeToAdapterConnection::channel_mapping() const {
  // @@protoc_insertion_point(field_list:arrus.proto.ProbeToAdapterConnection.channel_mapping)
  return _internal_channel_mapping();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ProbeToAdapterConnection::_internal_mutable_channel_mapping() {
  return &channel_mapping_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ProbeToAdapterConnection::mutable_channel_mapping() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.ProbeToAdapterConnection.channel_mapping)
  return _internal_mutable_channel_mapping();
}

// repeated .arrus.proto.IntervalInteger channel_mapping_ranges = 4;
inline int ProbeToAdapterConnection::_internal_channel_mapping_ranges_size() const {
  return channel_mapping_ranges_.size();
}
inline int ProbeToAdapterConnection::channel_mapping_ranges_size() const {
  return _internal_channel_mapping_ranges_size();
}
inline ::arrus::proto::IntervalInteger* ProbeToAdapterConnection::mutable_channel_mapping_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.ProbeToAdapterConnection.channel_mapping_ranges)
  return channel_mapping_ranges_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IntervalInteger >*
ProbeToAdapterConnection::mutable_channel_mapping_ranges() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.ProbeToAdapterConnection.channel_mapping_ranges)
  return &channel_mapping_ranges_;
}
inline const ::arrus::proto::IntervalInteger& ProbeToAdapterConnection::_internal_channel_mapping_ranges(int index) const {
  return channel_mapping_ranges_.Get(index);
}
inline const ::arrus::proto::IntervalInteger& ProbeToAdapterConnection::channel_mapping_ranges(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.channel_mapping_ranges)
  return _internal_channel_mapping_ranges(index);
}
inline ::arrus::proto::IntervalInteger* ProbeToAdapterConnection::_internal_add_channel_mapping_ranges() {
  return channel_mapping_ranges_.Add();
}
inline ::arrus::proto::IntervalInteger* ProbeToAdapterConnection::add_channel_mapping_ranges() {
  // @@protoc_insertion_point(field_add:arrus.proto.ProbeToAdapterConnection.channel_mapping_ranges)
  return _internal_add_channel_mapping_ranges();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IntervalInteger >&
ProbeToAdapterConnection::channel_mapping_ranges() const {
  // @@protoc_insertion_point(field_list:arrus.proto.ProbeToAdapterConnection.channel_mapping_ranges)
  return channel_mapping_ranges_;
}

// .arrus.proto.ProbeToAdapterConnection.BitstreamId bitstream_id = 5;
inline bool ProbeToAdapterConnection::_internal_has_bitstream_id() const {
  return this != internal_default_instance() && bitstream_id_ != nullptr;
}
inline bool ProbeToAdapterConnection::has_bitstream_id() const {
  return _internal_has_bitstream_id();
}
inline void ProbeToAdapterConnection::clear_bitstream_id() {
  if (GetArenaNoVirtual() == nullptr && bitstream_id_ != nullptr) {
    delete bitstream_id_;
  }
  bitstream_id_ = nullptr;
}
inline const ::arrus::proto::ProbeToAdapterConnection_BitstreamId& ProbeToAdapterConnection::_internal_bitstream_id() const {
  const ::arrus::proto::ProbeToAdapterConnection_BitstreamId* p = bitstream_id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::arrus::proto::ProbeToAdapterConnection_BitstreamId*>(
      &::arrus::proto::_ProbeToAdapterConnection_BitstreamId_default_instance_);
}
inline const ::arrus::proto::ProbeToAdapterConnection_BitstreamId& ProbeToAdapterConnection::bitstream_id() const {
  // @@protoc_insertion_point(field_get:arrus.proto.ProbeToAdapterConnection.bitstream_id)
  return _internal_bitstream_id();
}
inline ::arrus::proto::ProbeToAdapterConnection_BitstreamId* ProbeToAdapterConnection::release_bitstream_id() {
  // @@protoc_insertion_point(field_release:arrus.proto.ProbeToAdapterConnection.bitstream_id)
  
  ::arrus::proto::ProbeToAdapterConnection_BitstreamId* temp = bitstream_id_;
  bitstream_id_ = nullptr;
  return temp;
}
inline ::arrus::proto::ProbeToAdapterConnection_BitstreamId* ProbeToAdapterConnection::_internal_mutable_bitstream_id() {
  
  if (bitstream_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::arrus::proto::ProbeToAdapterConnection_BitstreamId>(GetArenaNoVirtual());
    bitstream_id_ = p;
  }
  return bitstream_id_;
}
inline ::arrus::proto::ProbeToAdapterConnection_BitstreamId* ProbeToAdapterConnection::mutable_bitstream_id() {
  // @@protoc_insertion_point(field_mutable:arrus.proto.ProbeToAdapterConnection.bitstream_id)
  return _internal_mutable_bitstream_id();
}
inline void ProbeToAdapterConnection::set_allocated_bitstream_id(::arrus::proto::ProbeToAdapterConnection_BitstreamId* bitstream_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bitstream_id_;
  }
  if (bitstream_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bitstream_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bitstream_id, submessage_arena);
    }
    
  } else {
    
  }
  bitstream_id_ = bitstream_id;
  // @@protoc_insertion_point(field_set_allocated:arrus.proto.ProbeToAdapterConnection.bitstream_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace arrus

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fProbeToAdapterConnection_2eproto
