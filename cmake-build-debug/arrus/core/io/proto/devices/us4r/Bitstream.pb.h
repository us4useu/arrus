// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/devices/us4r/Bitstream.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto;
namespace arrus {
namespace proto {
class Bitstream;
class BitstreamDefaultTypeInternal;
extern BitstreamDefaultTypeInternal _Bitstream_default_instance_;
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> ::arrus::proto::Bitstream* Arena::CreateMaybeMessage<::arrus::proto::Bitstream>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace arrus {
namespace proto {

// ===================================================================

class Bitstream :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.Bitstream) */ {
 public:
  Bitstream();
  virtual ~Bitstream();

  Bitstream(const Bitstream& from);
  Bitstream(Bitstream&& from) noexcept
    : Bitstream() {
    *this = ::std::move(from);
  }

  inline Bitstream& operator=(const Bitstream& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bitstream& operator=(Bitstream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Bitstream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bitstream* internal_default_instance() {
    return reinterpret_cast<const Bitstream*>(
               &_Bitstream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Bitstream& a, Bitstream& b) {
    a.Swap(&b);
  }
  inline void Swap(Bitstream* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Bitstream* New() const final {
    return CreateMaybeMessage<Bitstream>(nullptr);
  }

  Bitstream* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Bitstream>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Bitstream& from);
  void MergeFrom(const Bitstream& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bitstream* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.Bitstream";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto);
    return ::descriptor_table_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelsFieldNumber = 1,
    kPeriodsFieldNumber = 2,
  };
  // repeated uint32 levels = 1;
  int levels_size() const;
  private:
  int _internal_levels_size() const;
  public:
  void clear_levels();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_levels(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_levels() const;
  void _internal_add_levels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_levels();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 levels(int index) const;
  void set_levels(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_levels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      levels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_levels();

  // repeated uint32 periods = 2;
  int periods_size() const;
  private:
  int _internal_periods_size() const;
  public:
  void clear_periods();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_periods(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_periods() const;
  void _internal_add_periods(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_periods();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 periods(int index) const;
  void set_periods(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_periods(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      periods() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_periods();

  // @@protoc_insertion_point(class_scope:arrus.proto.Bitstream)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > levels_;
  mutable std::atomic<int> _levels_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > periods_;
  mutable std::atomic<int> _periods_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Bitstream

// repeated uint32 levels = 1;
inline int Bitstream::_internal_levels_size() const {
  return levels_.size();
}
inline int Bitstream::levels_size() const {
  return _internal_levels_size();
}
inline void Bitstream::clear_levels() {
  levels_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Bitstream::_internal_levels(int index) const {
  return levels_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Bitstream::levels(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.Bitstream.levels)
  return _internal_levels(index);
}
inline void Bitstream::set_levels(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:arrus.proto.Bitstream.levels)
}
inline void Bitstream::_internal_add_levels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  levels_.Add(value);
}
inline void Bitstream::add_levels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_levels(value);
  // @@protoc_insertion_point(field_add:arrus.proto.Bitstream.levels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Bitstream::_internal_levels() const {
  return levels_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Bitstream::levels() const {
  // @@protoc_insertion_point(field_list:arrus.proto.Bitstream.levels)
  return _internal_levels();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Bitstream::_internal_mutable_levels() {
  return &levels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Bitstream::mutable_levels() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.Bitstream.levels)
  return _internal_mutable_levels();
}

// repeated uint32 periods = 2;
inline int Bitstream::_internal_periods_size() const {
  return periods_.size();
}
inline int Bitstream::periods_size() const {
  return _internal_periods_size();
}
inline void Bitstream::clear_periods() {
  periods_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Bitstream::_internal_periods(int index) const {
  return periods_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Bitstream::periods(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.Bitstream.periods)
  return _internal_periods(index);
}
inline void Bitstream::set_periods(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  periods_.Set(index, value);
  // @@protoc_insertion_point(field_set:arrus.proto.Bitstream.periods)
}
inline void Bitstream::_internal_add_periods(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  periods_.Add(value);
}
inline void Bitstream::add_periods(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_periods(value);
  // @@protoc_insertion_point(field_add:arrus.proto.Bitstream.periods)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Bitstream::_internal_periods() const {
  return periods_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Bitstream::periods() const {
  // @@protoc_insertion_point(field_list:arrus.proto.Bitstream.periods)
  return _internal_periods();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Bitstream::_internal_mutable_periods() {
  return &periods_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Bitstream::mutable_periods() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.Bitstream.periods)
  return _internal_mutable_periods();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace arrus

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fBitstream_2eproto
