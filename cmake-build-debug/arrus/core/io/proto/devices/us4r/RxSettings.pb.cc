// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/devices/us4r/RxSettings.proto

#include "io/proto/devices/us4r/RxSettings.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fcommon_2fLinearFunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LinearFunction_io_2fproto_2fcommon_2fLinearFunction_2eproto;
namespace arrus {
namespace proto {
class RxSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RxSettings> _instance;
  ::PROTOBUF_NAMESPACE_ID::uint32 dtgc_attenuation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_termination_;
} _RxSettings_default_instance_;
}  // namespace proto
}  // namespace arrus
static void InitDefaultsscc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::arrus::proto::_RxSettings_default_instance_;
    new (ptr) ::arrus::proto::RxSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::arrus::proto::RxSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto}, {
      &scc_info_LinearFunction_io_2fproto_2fcommon_2fLinearFunction_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::arrus::proto::RxSettingsDefaultTypeInternal, dtgc_attenuation_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, pga_gain_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, lna_gain_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, tgc_curve_linear_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, tgc_samples_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, lpf_cutoff_),
  offsetof(::arrus::proto::RxSettingsDefaultTypeInternal, active_termination_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, dtgcAttenuation__),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::RxSettings, activeTermination__),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::arrus::proto::RxSettings)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::arrus::proto::_RxSettings_default_instance_),
};

const char descriptor_table_protodef_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&io/proto/devices/us4r/RxSettings.proto"
  "\022\013arrus.proto\032$io/proto/common/LinearFun"
  "ction.proto\"\364\001\n\nRxSettings\022\032\n\020dtgc_atten"
  "uation\030\002 \001(\rH\000\022\020\n\010pga_gain\030\003 \001(\r\022\020\n\010lna_"
  "gain\030\004 \001(\r\0225\n\020tgc_curve_linear\030\005 \001(\0132\033.a"
  "rrus.proto.LinearFunction\022\023\n\013tgc_samples"
  "\030\006 \003(\001\022\022\n\nlpf_cutoff\030\007 \001(\r\022\034\n\022active_ter"
  "mination\030\t \001(\rH\001B\022\n\020dtgcAttenuation_B\024\n\022"
  "activeTermination_b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_deps[1] = {
  &::descriptor_table_io_2fproto_2fcommon_2fLinearFunction_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_sccs[1] = {
  &scc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_once;
static bool descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto = {
  &descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_initialized, descriptor_table_protodef_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto, "io/proto/devices/us4r/RxSettings.proto", 346,
  &descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_once, descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_sccs, descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto::offsets,
  file_level_metadata_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto, 1, file_level_enum_descriptors_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto, file_level_service_descriptors_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto), true);
namespace arrus {
namespace proto {

// ===================================================================

void RxSettings::InitAsDefaultInstance() {
  ::arrus::proto::_RxSettings_default_instance_.dtgc_attenuation_ = 0u;
  ::arrus::proto::_RxSettings_default_instance_._instance.get_mutable()->tgc_curve_linear_ = const_cast< ::arrus::proto::LinearFunction*>(
      ::arrus::proto::LinearFunction::internal_default_instance());
  ::arrus::proto::_RxSettings_default_instance_.active_termination_ = 0u;
}
class RxSettings::_Internal {
 public:
  static const ::arrus::proto::LinearFunction& tgc_curve_linear(const RxSettings* msg);
};

const ::arrus::proto::LinearFunction&
RxSettings::_Internal::tgc_curve_linear(const RxSettings* msg) {
  return *msg->tgc_curve_linear_;
}
void RxSettings::clear_tgc_curve_linear() {
  if (GetArenaNoVirtual() == nullptr && tgc_curve_linear_ != nullptr) {
    delete tgc_curve_linear_;
  }
  tgc_curve_linear_ = nullptr;
}
RxSettings::RxSettings()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arrus.proto.RxSettings)
}
RxSettings::RxSettings(const RxSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      tgc_samples_(from.tgc_samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_tgc_curve_linear()) {
    tgc_curve_linear_ = new ::arrus::proto::LinearFunction(*from.tgc_curve_linear_);
  } else {
    tgc_curve_linear_ = nullptr;
  }
  ::memcpy(&pga_gain_, &from.pga_gain_,
    static_cast<size_t>(reinterpret_cast<char*>(&lpf_cutoff_) -
    reinterpret_cast<char*>(&pga_gain_)) + sizeof(lpf_cutoff_));
  clear_has_dtgcAttenuation_();
  switch (from.dtgcAttenuation__case()) {
    case kDtgcAttenuation: {
      _internal_set_dtgc_attenuation(from._internal_dtgc_attenuation());
      break;
    }
    case DTGCATTENUATION__NOT_SET: {
      break;
    }
  }
  clear_has_activeTermination_();
  switch (from.activeTermination__case()) {
    case kActiveTermination: {
      _internal_set_active_termination(from._internal_active_termination());
      break;
    }
    case ACTIVETERMINATION__NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:arrus.proto.RxSettings)
}

void RxSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto.base);
  ::memset(&tgc_curve_linear_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lpf_cutoff_) -
      reinterpret_cast<char*>(&tgc_curve_linear_)) + sizeof(lpf_cutoff_));
  clear_has_dtgcAttenuation_();
  clear_has_activeTermination_();
}

RxSettings::~RxSettings() {
  // @@protoc_insertion_point(destructor:arrus.proto.RxSettings)
  SharedDtor();
}

void RxSettings::SharedDtor() {
  if (this != internal_default_instance()) delete tgc_curve_linear_;
  if (has_dtgcAttenuation_()) {
    clear_dtgcAttenuation_();
  }
  if (has_activeTermination_()) {
    clear_activeTermination_();
  }
}

void RxSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RxSettings& RxSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RxSettings_io_2fproto_2fdevices_2fus4r_2fRxSettings_2eproto.base);
  return *internal_default_instance();
}


void RxSettings::clear_dtgcAttenuation_() {
// @@protoc_insertion_point(one_of_clear_start:arrus.proto.RxSettings)
  switch (dtgcAttenuation__case()) {
    case kDtgcAttenuation: {
      // No need to clear
      break;
    }
    case DTGCATTENUATION__NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DTGCATTENUATION__NOT_SET;
}

void RxSettings::clear_activeTermination_() {
// @@protoc_insertion_point(one_of_clear_start:arrus.proto.RxSettings)
  switch (activeTermination__case()) {
    case kActiveTermination: {
      // No need to clear
      break;
    }
    case ACTIVETERMINATION__NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ACTIVETERMINATION__NOT_SET;
}


void RxSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:arrus.proto.RxSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tgc_samples_.Clear();
  if (GetArenaNoVirtual() == nullptr && tgc_curve_linear_ != nullptr) {
    delete tgc_curve_linear_;
  }
  tgc_curve_linear_ = nullptr;
  ::memset(&pga_gain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lpf_cutoff_) -
      reinterpret_cast<char*>(&pga_gain_)) + sizeof(lpf_cutoff_));
  clear_dtgcAttenuation_();
  clear_activeTermination_();
  _internal_metadata_.Clear();
}

const char* RxSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 dtgc_attenuation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_dtgc_attenuation(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 pga_gain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          pga_gain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 lna_gain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          lna_gain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .arrus.proto.LinearFunction tgc_curve_linear = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_tgc_curve_linear(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double tgc_samples = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_tgc_samples(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49) {
          _internal_add_tgc_samples(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // uint32 lpf_cutoff = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          lpf_cutoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 active_termination = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _internal_set_active_termination(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RxSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:arrus.proto.RxSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dtgc_attenuation = 2;
  if (_internal_has_dtgc_attenuation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_dtgc_attenuation(), target);
  }

  // uint32 pga_gain = 3;
  if (this->pga_gain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_pga_gain(), target);
  }

  // uint32 lna_gain = 4;
  if (this->lna_gain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_lna_gain(), target);
  }

  // .arrus.proto.LinearFunction tgc_curve_linear = 5;
  if (this->has_tgc_curve_linear()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::tgc_curve_linear(this), target, stream);
  }

  // repeated double tgc_samples = 6;
  if (this->_internal_tgc_samples_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_tgc_samples(), target);
  }

  // uint32 lpf_cutoff = 7;
  if (this->lpf_cutoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_lpf_cutoff(), target);
  }

  // uint32 active_termination = 9;
  if (_internal_has_active_termination()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_active_termination(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arrus.proto.RxSettings)
  return target;
}

size_t RxSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arrus.proto.RxSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double tgc_samples = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_tgc_samples_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tgc_samples_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .arrus.proto.LinearFunction tgc_curve_linear = 5;
  if (this->has_tgc_curve_linear()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tgc_curve_linear_);
  }

  // uint32 pga_gain = 3;
  if (this->pga_gain() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_pga_gain());
  }

  // uint32 lna_gain = 4;
  if (this->lna_gain() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lna_gain());
  }

  // uint32 lpf_cutoff = 7;
  if (this->lpf_cutoff() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lpf_cutoff());
  }

  switch (dtgcAttenuation__case()) {
    // uint32 dtgc_attenuation = 2;
    case kDtgcAttenuation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_dtgc_attenuation());
      break;
    }
    case DTGCATTENUATION__NOT_SET: {
      break;
    }
  }
  switch (activeTermination__case()) {
    // uint32 active_termination = 9;
    case kActiveTermination: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_active_termination());
      break;
    }
    case ACTIVETERMINATION__NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RxSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arrus.proto.RxSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const RxSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RxSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arrus.proto.RxSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arrus.proto.RxSettings)
    MergeFrom(*source);
  }
}

void RxSettings::MergeFrom(const RxSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arrus.proto.RxSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tgc_samples_.MergeFrom(from.tgc_samples_);
  if (from.has_tgc_curve_linear()) {
    _internal_mutable_tgc_curve_linear()->::arrus::proto::LinearFunction::MergeFrom(from._internal_tgc_curve_linear());
  }
  if (from.pga_gain() != 0) {
    _internal_set_pga_gain(from._internal_pga_gain());
  }
  if (from.lna_gain() != 0) {
    _internal_set_lna_gain(from._internal_lna_gain());
  }
  if (from.lpf_cutoff() != 0) {
    _internal_set_lpf_cutoff(from._internal_lpf_cutoff());
  }
  switch (from.dtgcAttenuation__case()) {
    case kDtgcAttenuation: {
      _internal_set_dtgc_attenuation(from._internal_dtgc_attenuation());
      break;
    }
    case DTGCATTENUATION__NOT_SET: {
      break;
    }
  }
  switch (from.activeTermination__case()) {
    case kActiveTermination: {
      _internal_set_active_termination(from._internal_active_termination());
      break;
    }
    case ACTIVETERMINATION__NOT_SET: {
      break;
    }
  }
}

void RxSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arrus.proto.RxSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RxSettings::CopyFrom(const RxSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arrus.proto.RxSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RxSettings::IsInitialized() const {
  return true;
}

void RxSettings::InternalSwap(RxSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tgc_samples_.InternalSwap(&other->tgc_samples_);
  swap(tgc_curve_linear_, other->tgc_curve_linear_);
  swap(pga_gain_, other->pga_gain_);
  swap(lna_gain_, other->lna_gain_);
  swap(lpf_cutoff_, other->lpf_cutoff_);
  swap(dtgcAttenuation__, other->dtgcAttenuation__);
  swap(activeTermination__, other->activeTermination__);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RxSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::arrus::proto::RxSettings* Arena::CreateMaybeMessage< ::arrus::proto::RxSettings >(Arena* arena) {
  return Arena::CreateInternal< ::arrus::proto::RxSettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
