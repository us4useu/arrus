// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/devices/us4r/IOSettings.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "io/proto/devices/us4r/IOAddress.pb.h"
#include "io/proto/devices/us4r/IOCapability.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto;
namespace arrus {
namespace proto {
class IOSettings;
class IOSettingsDefaultTypeInternal;
extern IOSettingsDefaultTypeInternal _IOSettings_default_instance_;
class IOSettings_CapabilityAddress;
class IOSettings_CapabilityAddressDefaultTypeInternal;
extern IOSettings_CapabilityAddressDefaultTypeInternal _IOSettings_CapabilityAddress_default_instance_;
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> ::arrus::proto::IOSettings* Arena::CreateMaybeMessage<::arrus::proto::IOSettings>(Arena*);
template<> ::arrus::proto::IOSettings_CapabilityAddress* Arena::CreateMaybeMessage<::arrus::proto::IOSettings_CapabilityAddress>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace arrus {
namespace proto {

// ===================================================================

class IOSettings_CapabilityAddress :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.IOSettings.CapabilityAddress) */ {
 public:
  IOSettings_CapabilityAddress();
  virtual ~IOSettings_CapabilityAddress();

  IOSettings_CapabilityAddress(const IOSettings_CapabilityAddress& from);
  IOSettings_CapabilityAddress(IOSettings_CapabilityAddress&& from) noexcept
    : IOSettings_CapabilityAddress() {
    *this = ::std::move(from);
  }

  inline IOSettings_CapabilityAddress& operator=(const IOSettings_CapabilityAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOSettings_CapabilityAddress& operator=(IOSettings_CapabilityAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOSettings_CapabilityAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOSettings_CapabilityAddress* internal_default_instance() {
    return reinterpret_cast<const IOSettings_CapabilityAddress*>(
               &_IOSettings_CapabilityAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IOSettings_CapabilityAddress& a, IOSettings_CapabilityAddress& b) {
    a.Swap(&b);
  }
  inline void Swap(IOSettings_CapabilityAddress* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IOSettings_CapabilityAddress* New() const final {
    return CreateMaybeMessage<IOSettings_CapabilityAddress>(nullptr);
  }

  IOSettings_CapabilityAddress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOSettings_CapabilityAddress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOSettings_CapabilityAddress& from);
  void MergeFrom(const IOSettings_CapabilityAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOSettings_CapabilityAddress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.IOSettings.CapabilityAddress";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto);
    return ::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressesFieldNumber = 2,
    kCapabilityFieldNumber = 1,
  };
  // repeated .arrus.proto.IOAddress addresses = 2;
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;
  public:
  void clear_addresses();
  ::arrus::proto::IOAddress* mutable_addresses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOAddress >*
      mutable_addresses();
  private:
  const ::arrus::proto::IOAddress& _internal_addresses(int index) const;
  ::arrus::proto::IOAddress* _internal_add_addresses();
  public:
  const ::arrus::proto::IOAddress& addresses(int index) const;
  ::arrus::proto::IOAddress* add_addresses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOAddress >&
      addresses() const;

  // .arrus.proto.IOCapability capability = 1;
  void clear_capability();
  ::arrus::proto::IOCapability capability() const;
  void set_capability(::arrus::proto::IOCapability value);
  private:
  ::arrus::proto::IOCapability _internal_capability() const;
  void _internal_set_capability(::arrus::proto::IOCapability value);
  public:

  // @@protoc_insertion_point(class_scope:arrus.proto.IOSettings.CapabilityAddress)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOAddress > addresses_;
  int capability_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto;
};
// -------------------------------------------------------------------

class IOSettings :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.IOSettings) */ {
 public:
  IOSettings();
  virtual ~IOSettings();

  IOSettings(const IOSettings& from);
  IOSettings(IOSettings&& from) noexcept
    : IOSettings() {
    *this = ::std::move(from);
  }

  inline IOSettings& operator=(const IOSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOSettings& operator=(IOSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOSettings* internal_default_instance() {
    return reinterpret_cast<const IOSettings*>(
               &_IOSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IOSettings& a, IOSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(IOSettings* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IOSettings* New() const final {
    return CreateMaybeMessage<IOSettings>(nullptr);
  }

  IOSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOSettings>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOSettings& from);
  void MergeFrom(const IOSettings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOSettings* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.IOSettings";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto);
    return ::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef IOSettings_CapabilityAddress CapabilityAddress;

  // accessors -------------------------------------------------------

  enum : int {
    kCapabilitiesFieldNumber = 1,
  };
  // repeated .arrus.proto.IOSettings.CapabilityAddress capabilities = 1;
  int capabilities_size() const;
  private:
  int _internal_capabilities_size() const;
  public:
  void clear_capabilities();
  ::arrus::proto::IOSettings_CapabilityAddress* mutable_capabilities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOSettings_CapabilityAddress >*
      mutable_capabilities();
  private:
  const ::arrus::proto::IOSettings_CapabilityAddress& _internal_capabilities(int index) const;
  ::arrus::proto::IOSettings_CapabilityAddress* _internal_add_capabilities();
  public:
  const ::arrus::proto::IOSettings_CapabilityAddress& capabilities(int index) const;
  ::arrus::proto::IOSettings_CapabilityAddress* add_capabilities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOSettings_CapabilityAddress >&
      capabilities() const;

  // @@protoc_insertion_point(class_scope:arrus.proto.IOSettings)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOSettings_CapabilityAddress > capabilities_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IOSettings_CapabilityAddress

// .arrus.proto.IOCapability capability = 1;
inline void IOSettings_CapabilityAddress::clear_capability() {
  capability_ = 0;
}
inline ::arrus::proto::IOCapability IOSettings_CapabilityAddress::_internal_capability() const {
  return static_cast< ::arrus::proto::IOCapability >(capability_);
}
inline ::arrus::proto::IOCapability IOSettings_CapabilityAddress::capability() const {
  // @@protoc_insertion_point(field_get:arrus.proto.IOSettings.CapabilityAddress.capability)
  return _internal_capability();
}
inline void IOSettings_CapabilityAddress::_internal_set_capability(::arrus::proto::IOCapability value) {
  
  capability_ = value;
}
inline void IOSettings_CapabilityAddress::set_capability(::arrus::proto::IOCapability value) {
  _internal_set_capability(value);
  // @@protoc_insertion_point(field_set:arrus.proto.IOSettings.CapabilityAddress.capability)
}

// repeated .arrus.proto.IOAddress addresses = 2;
inline int IOSettings_CapabilityAddress::_internal_addresses_size() const {
  return addresses_.size();
}
inline int IOSettings_CapabilityAddress::addresses_size() const {
  return _internal_addresses_size();
}
inline ::arrus::proto::IOAddress* IOSettings_CapabilityAddress::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.IOSettings.CapabilityAddress.addresses)
  return addresses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOAddress >*
IOSettings_CapabilityAddress::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.IOSettings.CapabilityAddress.addresses)
  return &addresses_;
}
inline const ::arrus::proto::IOAddress& IOSettings_CapabilityAddress::_internal_addresses(int index) const {
  return addresses_.Get(index);
}
inline const ::arrus::proto::IOAddress& IOSettings_CapabilityAddress::addresses(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.IOSettings.CapabilityAddress.addresses)
  return _internal_addresses(index);
}
inline ::arrus::proto::IOAddress* IOSettings_CapabilityAddress::_internal_add_addresses() {
  return addresses_.Add();
}
inline ::arrus::proto::IOAddress* IOSettings_CapabilityAddress::add_addresses() {
  // @@protoc_insertion_point(field_add:arrus.proto.IOSettings.CapabilityAddress.addresses)
  return _internal_add_addresses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOAddress >&
IOSettings_CapabilityAddress::addresses() const {
  // @@protoc_insertion_point(field_list:arrus.proto.IOSettings.CapabilityAddress.addresses)
  return addresses_;
}

// -------------------------------------------------------------------

// IOSettings

// repeated .arrus.proto.IOSettings.CapabilityAddress capabilities = 1;
inline int IOSettings::_internal_capabilities_size() const {
  return capabilities_.size();
}
inline int IOSettings::capabilities_size() const {
  return _internal_capabilities_size();
}
inline void IOSettings::clear_capabilities() {
  capabilities_.Clear();
}
inline ::arrus::proto::IOSettings_CapabilityAddress* IOSettings::mutable_capabilities(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.IOSettings.capabilities)
  return capabilities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOSettings_CapabilityAddress >*
IOSettings::mutable_capabilities() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.IOSettings.capabilities)
  return &capabilities_;
}
inline const ::arrus::proto::IOSettings_CapabilityAddress& IOSettings::_internal_capabilities(int index) const {
  return capabilities_.Get(index);
}
inline const ::arrus::proto::IOSettings_CapabilityAddress& IOSettings::capabilities(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.IOSettings.capabilities)
  return _internal_capabilities(index);
}
inline ::arrus::proto::IOSettings_CapabilityAddress* IOSettings::_internal_add_capabilities() {
  return capabilities_.Add();
}
inline ::arrus::proto::IOSettings_CapabilityAddress* IOSettings::add_capabilities() {
  // @@protoc_insertion_point(field_add:arrus.proto.IOSettings.capabilities)
  return _internal_add_capabilities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::IOSettings_CapabilityAddress >&
IOSettings::capabilities() const {
  // @@protoc_insertion_point(field_list:arrus.proto.IOSettings.capabilities)
  return capabilities_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace arrus

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto
