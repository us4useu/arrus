// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/devices/us4r/IOSettings.proto

#include "io/proto/devices/us4r/IOSettings.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fIOAddress_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IOAddress_io_2fproto_2fdevices_2fus4r_2fIOAddress_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto;
namespace arrus {
namespace proto {
class IOSettings_CapabilityAddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IOSettings_CapabilityAddress> _instance;
} _IOSettings_CapabilityAddress_default_instance_;
class IOSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IOSettings> _instance;
} _IOSettings_default_instance_;
}  // namespace proto
}  // namespace arrus
static void InitDefaultsscc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::arrus::proto::_IOSettings_default_instance_;
    new (ptr) ::arrus::proto::IOSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::arrus::proto::IOSettings::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto}, {
      &scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base,}};

static void InitDefaultsscc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::arrus::proto::_IOSettings_CapabilityAddress_default_instance_;
    new (ptr) ::arrus::proto::IOSettings_CapabilityAddress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::arrus::proto::IOSettings_CapabilityAddress::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto}, {
      &scc_info_IOAddress_io_2fproto_2fdevices_2fus4r_2fIOAddress_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::IOSettings_CapabilityAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::IOSettings_CapabilityAddress, capability_),
  PROTOBUF_FIELD_OFFSET(::arrus::proto::IOSettings_CapabilityAddress, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::IOSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::arrus::proto::IOSettings, capabilities_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::arrus::proto::IOSettings_CapabilityAddress)},
  { 7, -1, sizeof(::arrus::proto::IOSettings)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::arrus::proto::_IOSettings_CapabilityAddress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::arrus::proto::_IOSettings_default_instance_),
};

const char descriptor_table_protodef_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&io/proto/devices/us4r/IOSettings.proto"
  "\022\013arrus.proto\032%io/proto/devices/us4r/IOA"
  "ddress.proto\032(io/proto/devices/us4r/IOCa"
  "pability.proto\"\274\001\n\nIOSettings\022\?\n\014capabil"
  "ities\030\001 \003(\0132).arrus.proto.IOSettings.Cap"
  "abilityAddress\032m\n\021CapabilityAddress\022-\n\nc"
  "apability\030\001 \001(\0162\031.arrus.proto.IOCapabili"
  "ty\022)\n\taddresses\030\002 \003(\0132\026.arrus.proto.IOAd"
  "dressb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_deps[2] = {
  &::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOAddress_2eproto,
  &::descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOCapability_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_sccs[2] = {
  &scc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base,
  &scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_once;
static bool descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto = {
  &descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_initialized, descriptor_table_protodef_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto, "io/proto/devices/us4r/IOSettings.proto", 333,
  &descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_once, descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_sccs, descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto::offsets,
  file_level_metadata_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto, 2, file_level_enum_descriptors_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto, file_level_service_descriptors_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto), true);
namespace arrus {
namespace proto {

// ===================================================================

void IOSettings_CapabilityAddress::InitAsDefaultInstance() {
}
class IOSettings_CapabilityAddress::_Internal {
 public:
};

void IOSettings_CapabilityAddress::clear_addresses() {
  addresses_.Clear();
}
IOSettings_CapabilityAddress::IOSettings_CapabilityAddress()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arrus.proto.IOSettings.CapabilityAddress)
}
IOSettings_CapabilityAddress::IOSettings_CapabilityAddress(const IOSettings_CapabilityAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  capability_ = from.capability_;
  // @@protoc_insertion_point(copy_constructor:arrus.proto.IOSettings.CapabilityAddress)
}

void IOSettings_CapabilityAddress::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base);
  capability_ = 0;
}

IOSettings_CapabilityAddress::~IOSettings_CapabilityAddress() {
  // @@protoc_insertion_point(destructor:arrus.proto.IOSettings.CapabilityAddress)
  SharedDtor();
}

void IOSettings_CapabilityAddress::SharedDtor() {
}

void IOSettings_CapabilityAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IOSettings_CapabilityAddress& IOSettings_CapabilityAddress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IOSettings_CapabilityAddress_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base);
  return *internal_default_instance();
}


void IOSettings_CapabilityAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:arrus.proto.IOSettings.CapabilityAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  capability_ = 0;
  _internal_metadata_.Clear();
}

const char* IOSettings_CapabilityAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .arrus.proto.IOCapability capability = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_capability(static_cast<::arrus::proto::IOCapability>(val));
        } else goto handle_unusual;
        continue;
      // repeated .arrus.proto.IOAddress addresses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_addresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IOSettings_CapabilityAddress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:arrus.proto.IOSettings.CapabilityAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .arrus.proto.IOCapability capability = 1;
  if (this->capability() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_capability(), target);
  }

  // repeated .arrus.proto.IOAddress addresses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_addresses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_addresses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arrus.proto.IOSettings.CapabilityAddress)
  return target;
}

size_t IOSettings_CapabilityAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arrus.proto.IOSettings.CapabilityAddress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .arrus.proto.IOAddress addresses = 2;
  total_size += 1UL * this->_internal_addresses_size();
  for (const auto& msg : this->addresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .arrus.proto.IOCapability capability = 1;
  if (this->capability() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_capability());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IOSettings_CapabilityAddress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arrus.proto.IOSettings.CapabilityAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const IOSettings_CapabilityAddress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IOSettings_CapabilityAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arrus.proto.IOSettings.CapabilityAddress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arrus.proto.IOSettings.CapabilityAddress)
    MergeFrom(*source);
  }
}

void IOSettings_CapabilityAddress::MergeFrom(const IOSettings_CapabilityAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arrus.proto.IOSettings.CapabilityAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.capability() != 0) {
    _internal_set_capability(from._internal_capability());
  }
}

void IOSettings_CapabilityAddress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arrus.proto.IOSettings.CapabilityAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOSettings_CapabilityAddress::CopyFrom(const IOSettings_CapabilityAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arrus.proto.IOSettings.CapabilityAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOSettings_CapabilityAddress::IsInitialized() const {
  return true;
}

void IOSettings_CapabilityAddress::InternalSwap(IOSettings_CapabilityAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
  swap(capability_, other->capability_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IOSettings_CapabilityAddress::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IOSettings::InitAsDefaultInstance() {
}
class IOSettings::_Internal {
 public:
};

IOSettings::IOSettings()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:arrus.proto.IOSettings)
}
IOSettings::IOSettings(const IOSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      capabilities_(from.capabilities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:arrus.proto.IOSettings)
}

void IOSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base);
}

IOSettings::~IOSettings() {
  // @@protoc_insertion_point(destructor:arrus.proto.IOSettings)
  SharedDtor();
}

void IOSettings::SharedDtor() {
}

void IOSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IOSettings& IOSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IOSettings_io_2fproto_2fdevices_2fus4r_2fIOSettings_2eproto.base);
  return *internal_default_instance();
}


void IOSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:arrus.proto.IOSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  _internal_metadata_.Clear();
}

const char* IOSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .arrus.proto.IOSettings.CapabilityAddress capabilities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_capabilities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IOSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:arrus.proto.IOSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .arrus.proto.IOSettings.CapabilityAddress capabilities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_capabilities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_capabilities(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arrus.proto.IOSettings)
  return target;
}

size_t IOSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arrus.proto.IOSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .arrus.proto.IOSettings.CapabilityAddress capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->capabilities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IOSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arrus.proto.IOSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const IOSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IOSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arrus.proto.IOSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arrus.proto.IOSettings)
    MergeFrom(*source);
  }
}

void IOSettings::MergeFrom(const IOSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arrus.proto.IOSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
}

void IOSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arrus.proto.IOSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IOSettings::CopyFrom(const IOSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arrus.proto.IOSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IOSettings::IsInitialized() const {
  return true;
}

void IOSettings::InternalSwap(IOSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  capabilities_.InternalSwap(&other->capabilities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IOSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::arrus::proto::IOSettings_CapabilityAddress* Arena::CreateMaybeMessage< ::arrus::proto::IOSettings_CapabilityAddress >(Arena* arena) {
  return Arena::CreateInternal< ::arrus::proto::IOSettings_CapabilityAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::arrus::proto::IOSettings* Arena::CreateMaybeMessage< ::arrus::proto::IOSettings >(Arena* arena) {
  return Arena::CreateInternal< ::arrus::proto::IOSettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
