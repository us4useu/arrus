// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/proto/Dictionary.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fDictionary_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fDictionary_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "io/proto/devices/probe/ProbeModel.pb.h"
#include "io/proto/devices/us4r/ProbeAdapterModel.pb.h"
#include "io/proto/devices/us4r/ProbeToAdapterConnection.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_io_2fproto_2fDictionary_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_io_2fproto_2fDictionary_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_io_2fproto_2fDictionary_2eproto;
namespace arrus {
namespace proto {
class Dictionary;
class DictionaryDefaultTypeInternal;
extern DictionaryDefaultTypeInternal _Dictionary_default_instance_;
}  // namespace proto
}  // namespace arrus
PROTOBUF_NAMESPACE_OPEN
template<> ::arrus::proto::Dictionary* Arena::CreateMaybeMessage<::arrus::proto::Dictionary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace arrus {
namespace proto {

// ===================================================================

class Dictionary :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:arrus.proto.Dictionary) */ {
 public:
  Dictionary();
  virtual ~Dictionary();

  Dictionary(const Dictionary& from);
  Dictionary(Dictionary&& from) noexcept
    : Dictionary() {
    *this = ::std::move(from);
  }

  inline Dictionary& operator=(const Dictionary& from) {
    CopyFrom(from);
    return *this;
  }
  inline Dictionary& operator=(Dictionary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Dictionary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dictionary* internal_default_instance() {
    return reinterpret_cast<const Dictionary*>(
               &_Dictionary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Dictionary& a, Dictionary& b) {
    a.Swap(&b);
  }
  inline void Swap(Dictionary* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Dictionary* New() const final {
    return CreateMaybeMessage<Dictionary>(nullptr);
  }

  Dictionary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Dictionary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Dictionary& from);
  void MergeFrom(const Dictionary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dictionary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "arrus.proto.Dictionary";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_io_2fproto_2fDictionary_2eproto);
    return ::descriptor_table_io_2fproto_2fDictionary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProbeModelsFieldNumber = 1,
    kProbeAdapterModelsFieldNumber = 2,
    kProbeToAdapterConnectionsFieldNumber = 3,
  };
  // repeated .arrus.proto.ProbeModel probe_models = 1;
  int probe_models_size() const;
  private:
  int _internal_probe_models_size() const;
  public:
  void clear_probe_models();
  ::arrus::proto::ProbeModel* mutable_probe_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeModel >*
      mutable_probe_models();
  private:
  const ::arrus::proto::ProbeModel& _internal_probe_models(int index) const;
  ::arrus::proto::ProbeModel* _internal_add_probe_models();
  public:
  const ::arrus::proto::ProbeModel& probe_models(int index) const;
  ::arrus::proto::ProbeModel* add_probe_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeModel >&
      probe_models() const;

  // repeated .arrus.proto.ProbeAdapterModel probe_adapter_models = 2;
  int probe_adapter_models_size() const;
  private:
  int _internal_probe_adapter_models_size() const;
  public:
  void clear_probe_adapter_models();
  ::arrus::proto::ProbeAdapterModel* mutable_probe_adapter_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel >*
      mutable_probe_adapter_models();
  private:
  const ::arrus::proto::ProbeAdapterModel& _internal_probe_adapter_models(int index) const;
  ::arrus::proto::ProbeAdapterModel* _internal_add_probe_adapter_models();
  public:
  const ::arrus::proto::ProbeAdapterModel& probe_adapter_models(int index) const;
  ::arrus::proto::ProbeAdapterModel* add_probe_adapter_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel >&
      probe_adapter_models() const;

  // repeated .arrus.proto.ProbeToAdapterConnection probe_to_adapter_connections = 3;
  int probe_to_adapter_connections_size() const;
  private:
  int _internal_probe_to_adapter_connections_size() const;
  public:
  void clear_probe_to_adapter_connections();
  ::arrus::proto::ProbeToAdapterConnection* mutable_probe_to_adapter_connections(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeToAdapterConnection >*
      mutable_probe_to_adapter_connections();
  private:
  const ::arrus::proto::ProbeToAdapterConnection& _internal_probe_to_adapter_connections(int index) const;
  ::arrus::proto::ProbeToAdapterConnection* _internal_add_probe_to_adapter_connections();
  public:
  const ::arrus::proto::ProbeToAdapterConnection& probe_to_adapter_connections(int index) const;
  ::arrus::proto::ProbeToAdapterConnection* add_probe_to_adapter_connections();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeToAdapterConnection >&
      probe_to_adapter_connections() const;

  // @@protoc_insertion_point(class_scope:arrus.proto.Dictionary)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeModel > probe_models_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel > probe_adapter_models_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeToAdapterConnection > probe_to_adapter_connections_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_io_2fproto_2fDictionary_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Dictionary

// repeated .arrus.proto.ProbeModel probe_models = 1;
inline int Dictionary::_internal_probe_models_size() const {
  return probe_models_.size();
}
inline int Dictionary::probe_models_size() const {
  return _internal_probe_models_size();
}
inline ::arrus::proto::ProbeModel* Dictionary::mutable_probe_models(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.Dictionary.probe_models)
  return probe_models_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeModel >*
Dictionary::mutable_probe_models() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.Dictionary.probe_models)
  return &probe_models_;
}
inline const ::arrus::proto::ProbeModel& Dictionary::_internal_probe_models(int index) const {
  return probe_models_.Get(index);
}
inline const ::arrus::proto::ProbeModel& Dictionary::probe_models(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.Dictionary.probe_models)
  return _internal_probe_models(index);
}
inline ::arrus::proto::ProbeModel* Dictionary::_internal_add_probe_models() {
  return probe_models_.Add();
}
inline ::arrus::proto::ProbeModel* Dictionary::add_probe_models() {
  // @@protoc_insertion_point(field_add:arrus.proto.Dictionary.probe_models)
  return _internal_add_probe_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeModel >&
Dictionary::probe_models() const {
  // @@protoc_insertion_point(field_list:arrus.proto.Dictionary.probe_models)
  return probe_models_;
}

// repeated .arrus.proto.ProbeAdapterModel probe_adapter_models = 2;
inline int Dictionary::_internal_probe_adapter_models_size() const {
  return probe_adapter_models_.size();
}
inline int Dictionary::probe_adapter_models_size() const {
  return _internal_probe_adapter_models_size();
}
inline ::arrus::proto::ProbeAdapterModel* Dictionary::mutable_probe_adapter_models(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.Dictionary.probe_adapter_models)
  return probe_adapter_models_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel >*
Dictionary::mutable_probe_adapter_models() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.Dictionary.probe_adapter_models)
  return &probe_adapter_models_;
}
inline const ::arrus::proto::ProbeAdapterModel& Dictionary::_internal_probe_adapter_models(int index) const {
  return probe_adapter_models_.Get(index);
}
inline const ::arrus::proto::ProbeAdapterModel& Dictionary::probe_adapter_models(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.Dictionary.probe_adapter_models)
  return _internal_probe_adapter_models(index);
}
inline ::arrus::proto::ProbeAdapterModel* Dictionary::_internal_add_probe_adapter_models() {
  return probe_adapter_models_.Add();
}
inline ::arrus::proto::ProbeAdapterModel* Dictionary::add_probe_adapter_models() {
  // @@protoc_insertion_point(field_add:arrus.proto.Dictionary.probe_adapter_models)
  return _internal_add_probe_adapter_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeAdapterModel >&
Dictionary::probe_adapter_models() const {
  // @@protoc_insertion_point(field_list:arrus.proto.Dictionary.probe_adapter_models)
  return probe_adapter_models_;
}

// repeated .arrus.proto.ProbeToAdapterConnection probe_to_adapter_connections = 3;
inline int Dictionary::_internal_probe_to_adapter_connections_size() const {
  return probe_to_adapter_connections_.size();
}
inline int Dictionary::probe_to_adapter_connections_size() const {
  return _internal_probe_to_adapter_connections_size();
}
inline ::arrus::proto::ProbeToAdapterConnection* Dictionary::mutable_probe_to_adapter_connections(int index) {
  // @@protoc_insertion_point(field_mutable:arrus.proto.Dictionary.probe_to_adapter_connections)
  return probe_to_adapter_connections_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeToAdapterConnection >*
Dictionary::mutable_probe_to_adapter_connections() {
  // @@protoc_insertion_point(field_mutable_list:arrus.proto.Dictionary.probe_to_adapter_connections)
  return &probe_to_adapter_connections_;
}
inline const ::arrus::proto::ProbeToAdapterConnection& Dictionary::_internal_probe_to_adapter_connections(int index) const {
  return probe_to_adapter_connections_.Get(index);
}
inline const ::arrus::proto::ProbeToAdapterConnection& Dictionary::probe_to_adapter_connections(int index) const {
  // @@protoc_insertion_point(field_get:arrus.proto.Dictionary.probe_to_adapter_connections)
  return _internal_probe_to_adapter_connections(index);
}
inline ::arrus::proto::ProbeToAdapterConnection* Dictionary::_internal_add_probe_to_adapter_connections() {
  return probe_to_adapter_connections_.Add();
}
inline ::arrus::proto::ProbeToAdapterConnection* Dictionary::add_probe_to_adapter_connections() {
  // @@protoc_insertion_point(field_add:arrus.proto.Dictionary.probe_to_adapter_connections)
  return _internal_add_probe_to_adapter_connections();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::arrus::proto::ProbeToAdapterConnection >&
Dictionary::probe_to_adapter_connections() const {
  // @@protoc_insertion_point(field_list:arrus.proto.Dictionary.probe_to_adapter_connections)
  return probe_to_adapter_connections_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace arrus

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_io_2fproto_2fDictionary_2eproto
