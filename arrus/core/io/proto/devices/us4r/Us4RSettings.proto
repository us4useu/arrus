syntax  = "proto3";

package arrus.proto;

import "io/proto/devices/probe/ProbeModel.proto";
import "io/proto/devices/us4r/ProbeAdapterModel.proto";
import "io/proto/devices/us4r/ProbeToAdapterConnection.proto";
import "io/proto/devices/us4r/RxSettings.proto";
import "io/proto/devices/us4r/Us4OEMSettings.proto";
import "io/proto/devices/us4r/HVSettings.proto";
import "io/proto/devices/us4r/DigitalBackplaneSettings.proto";
import "io/proto/devices/us4r/Bitstream.proto";

message Us4RSettings {
  // Only one of the following is available: (probe, adapter, rxsettings)
  repeated ProbeModel.Id probe_id = 1;
  repeated ProbeModel probe = 2;

  oneof one_of_adapter_representation {
    ProbeAdapterModel.Id adapter_id = 3;
    ProbeAdapterModel adapter = 4;
  }

  message ChannelsMask {
    // The channel number of the probe that should be turned of.
    repeated uint32 channels = 1;
  }

  repeated ChannelsMask channels_mask = 5;
  repeated ProbeToAdapterConnection probe_to_adapter_connection = 6;
  RxSettings rx_settings = 7;
  HVSettings hv = 8;

// TODO (0.12.0) Deprecated, should be removed soon
  repeated ChannelsMask us4oem_channels_mask = 9;
  Us4OEMSettings.ReprogrammingMode reprogramming_mode = 10;
  oneof optional_nus4ems {
    uint32 nus4oems = 11;
  }
  repeated uint32 adapter_to_us4r_module_nr = 12;
  bool external_trigger = 13;
  oneof optional_tx_frequency_range {
    uint32 tx_frequency_range = 14;
  }
  DigitalBackplaneSettings digital_backplane = 15;
  repeated Bitstream bitstreams = 16;
}